// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/popeskul/awesome-messanger/services/profile/internal/core/ports (interfaces: ProfileUseCase)
//
// Generated by this command:
//
//	mockgen -destination=usecase_mock.go -package=ports github.com/popeskul/awesome-messanger/services/profile/internal/core/ports ProfileUseCase
//

// Package ports is a generated GoMock package.
package ports

import (
	context "context"
	reflect "reflect"

	domain "github.com/popeskul/awesome-messanger/services/profile/internal/core/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockProfileUseCase is a mock of ProfileUseCase interface.
type MockProfileUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockProfileUseCaseMockRecorder
}

// MockProfileUseCaseMockRecorder is the mock recorder for MockProfileUseCase.
type MockProfileUseCaseMockRecorder struct {
	mock *MockProfileUseCase
}

// NewMockProfileUseCase creates a new mock instance.
func NewMockProfileUseCase(ctrl *gomock.Controller) *MockProfileUseCase {
	mock := &MockProfileUseCase{ctrl: ctrl}
	mock.recorder = &MockProfileUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileUseCase) EXPECT() *MockProfileUseCaseMockRecorder {
	return m.recorder
}

// CreateProfile mocks base method.
func (m *MockProfileUseCase) CreateProfile(arg0 context.Context, arg1 *CreateProfileRequest) (*domain.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfile", arg0, arg1)
	ret0, _ := ret[0].(*domain.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfile indicates an expected call of CreateProfile.
func (mr *MockProfileUseCaseMockRecorder) CreateProfile(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfile", reflect.TypeOf((*MockProfileUseCase)(nil).CreateProfile), arg0, arg1)
}

// GetProfile mocks base method.
func (m *MockProfileUseCase) GetProfile(arg0 context.Context, arg1 *GetProfileRequest) (*domain.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile", arg0, arg1)
	ret0, _ := ret[0].(*domain.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfile indicates an expected call of GetProfile.
func (mr *MockProfileUseCaseMockRecorder) GetProfile(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockProfileUseCase)(nil).GetProfile), arg0, arg1)
}

// UpdateProfile mocks base method.
func (m *MockProfileUseCase) UpdateProfile(arg0 context.Context, arg1 *UpdateProfileRequest) (*domain.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile", arg0, arg1)
	ret0, _ := ret[0].(*domain.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockProfileUseCaseMockRecorder) UpdateProfile(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockProfileUseCase)(nil).UpdateProfile), arg0, arg1)
}
