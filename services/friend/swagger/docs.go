// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add-friend": {
            "post": {
                "description": "Add a friend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Add a friend",
                "parameters": [
                    {
                        "description": "Friend request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.FriendRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Friend added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to add friend",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/friends": {
            "get": {
                "description": "Get friends",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Get friends",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friends",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Friend"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve friends",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/live": {
            "get": {
                "description": "Get live",
                "tags": [
                    "health"
                ],
                "summary": "Get live",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Get ready",
                "tags": [
                    "health"
                ],
                "summary": "Get ready",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/respond-friend-request": {
            "post": {
                "description": "Respond to a friend request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Respond to a friend request",
                "parameters": [
                    {
                        "description": "Friend request response",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PostRespondFriendRequestJSONRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request responded",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to respond to friend request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.Friend": {
            "type": "object",
            "properties": {
                "friendId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "handlers.FriendRequest": {
            "type": "object",
            "required": [
                "friendId",
                "userId"
            ],
            "properties": {
                "friendId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "handlers.PostRespondFriendRequestJSONRequestBody": {
            "type": "object",
            "required": [
                "accept",
                "friendId",
                "userId"
            ],
            "properties": {
                "accept": {
                    "type": "boolean"
                },
                "friendId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8090",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Friend Service API",
	Description:      "This is a Friend service API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
